secrets:
  minio.rootuser: { file: ./.secret/.minio.rootuser }
  minio.rootpass: { file: ./.secret/.minio.rootpass }
  minio.host: { file: ./.secret/.minio.host }
  minio.port: { file: ./.secret/.minio.port }
  minio.region: { file: ./.secret/.minio.region }
  minio.loki-bucket-blocks: { file: ./.secret/.minio.loki-bucket-blocks }
  minio.loki-bucket-ruler: { file: ./.secret/.minio.loki-bucket-ruler }
  minio.loki-accesskey: { file: ./.secret/.minio.loki-accesskey }
  minio.loki-secretkey: { file: ./.secret/.minio.loki-secretkey }
  minio.mimir-bucket-alertmanager: { file: ./.secret/.minio.mimir-bucket-alertmanager }
  minio.mimir-bucket-blocks: { file: ./.secret/.minio.mimir-bucket-blocks }
  minio.mimir-bucket-ruler: { file: ./.secret/.minio.mimir-bucket-ruler }
  minio.mimir-accesskey: { file: ./.secret/.minio.mimir-accesskey }
  minio.mimir-secretkey: { file: ./.secret/.minio.mimir-secretkey }
  minio.pyroscope-bucket: { file: ./.secret/.minio.pyroscope-bucket }
  minio.pyroscope-accesskey: { file: ./.secret/.minio.pyroscope-accesskey }
  minio.pyroscope-secretkey: { file: ./.secret/.minio.pyroscope-secretkey }
  minio.tempo-bucket: { file: ./.secret/.minio.tempo-bucket }
  minio.tempo-accesskey: { file: ./.secret/.minio.tempo-accesskey }
  minio.tempo-secretkey: { file: ./.secret/.minio.tempo-secretkey }
services:
  _:
    profiles: [_]
    user: ${UID}:${GID}
    entrypoint: [/entrypoint]
    environment: [TZ=Asia/Jakarta]
  # --------------------------------------------------------------------------------------------------------------------
  minio:
    extends: { service: _ }
    profiles: [simple, loki, mimir, pyroscope, tempo]
    container_name: minio
    image: minio/minio:latest
    ports: ["9000", 9001:9001]
    volumes:
      - ./.volume/data/minio:/mnt
      - ./minio.entrypoint.sh:/entrypoint:ro
    healthcheck:
      test: "/healthcheck"
      interval: 250ms
      timeout: 750ms
      retries: 30
    environment:
      - MC_JSON=1
      - MC_QUIET=1
      - MINIO_ROOT_USER_FILE=/run/secrets/minio.rootuser
      - MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio.rootpass
    secrets:
      - minio.rootuser
      - minio.rootpass
      - minio.host
      - minio.port
      - minio.region
      - minio.loki-bucket-blocks
      - minio.loki-bucket-ruler
      - minio.loki-accesskey
      - minio.loki-secretkey
      - minio.mimir-bucket-alertmanager
      - minio.mimir-bucket-blocks
      - minio.mimir-bucket-ruler
      - minio.mimir-accesskey
      - minio.mimir-secretkey
      - minio.pyroscope-bucket
      - minio.pyroscope-accesskey
      - minio.pyroscope-secretkey
      - minio.tempo-bucket
      - minio.tempo-accesskey
      - minio.tempo-secretkey
  # --------------------------------------------------------------------------------------------------------------------
  grafana:
    extends: { service: _ }
    profiles: [simple, loki, mimir, pyroscope, tempo]
    container_name: grafana
    image: grafana/grafana-enterprise:11.3.0
    ports: [3000:3000]
    volumes:
      - ./.volume/data/grafana/var/lib/grafana:/var/lib/grafana
      - ./grafana.dashboard.entrypoint.sh:/entrypoint:ro
      - ./grafana.dashboard.config.ini:/etc/grafana/grafana.ini:ro
      - ./grafana.dashboard.provisioning.dashboards.19923_rev3.json:/etc/grafana/provisioning/dashboards/19923_rev3.json
      - ./grafana.dashboard.provisioning.datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
  # --------------------------------------------------------------------------------------------------------------------
  loki-all:
    extends: { service: _ }
    profiles: [simple, loki]
    container_name: loki-all
    ports: ["3100:3100", "3101:3101", "7946"]
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/loki:3.2.1 AS loki
        FROM busybox:latest
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=loki /usr/bin/loki .
        ENV SERVICE=loki TARGET=all HTTP_LISTEN_PORT=3100 GRPC_LISTEN_PORT=3101 MEMBERLIST_PORT=7946
        ENTRYPOINT ["/entrypoint"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana.loki.entrypoint.sh:/entrypoint:ro
      - ./grafana.loki.config.yml:/etc/config/loki.yml:ro
      - ./otelcol.config.sidecar.yml:/etc/config/otelcol-contrib.yml:ro
      - ./.volume/data/grafana-loki-all/var/lib/otelcol-contrib:/var/lib/otelcol-contrib
      - ./.volume/data/grafana-loki-all/var/lib/loki:/var/lib/loki
      - ./.volume/data/grafana-loki-all/var/log/loki:/var/log/loki
    secrets:
      - minio.host
      - minio.port
      - minio.region
      - minio.loki-bucket-blocks
      - minio.loki-bucket-ruler
      - minio.loki-accesskey
      - minio.loki-secretkey
    depends_on: { minio: { condition: service_healthy } }
    # deploy: { mode: replicated, replicas: 3 }
  # --------------------------------------------------------------------------------------------------------------------
  mimir-all:
    extends: { service: _ }
    profiles: [simple, mimir]
    container_name: mimir-all
    # image: grafana/mimir:2.14.1
    ports: [3200:3200, 3201:3201]
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/mimir:2.14.1 AS mimir
        FROM busybox:latest AS busybox
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=mimir /bin/mimir .
        ENV SERVICE=mimir TARGET=all HTTP_LISTEN_PORT=3200 GRPC_LISTEN_PORT=3201
        ENTRYPOINT ["/entrypoint"]
    volumes:
      - ./grafana.mimir.entrypoint.sh:/entrypoint:ro
      - ./grafana.mimir.config.yml:/config.yml:ro
      - ./otelcol.config.sidecar.yml:/config.otelcol-contrib.yml:ro
      - ./.volume/data/grafana-mimir/var/lib/mimir/mimir-all:/var/lib/mimir
      - ./.volume/data/grafana-mimir/var/log/mimir/mimir-all:/var/log/mimir
    secrets:
      - minio.host
      - minio.port
      - minio.region
      - minio.mimir-bucket-blocks
      - minio.mimir-bucket-alertmanager
      - minio.mimir-bucket-ruler
      - minio.mimir-accesskey
      - minio.mimir-secretkey
    depends_on: { minio: { condition: service_healthy } }
  # --------------------------------------------------------------------------------------------------------------------
  tempo-all:
    extends: { service: _ }
    profiles: [simple, tempo]
    container_name: tempo-all
    image: grafana/tempo:2.6.1
    ports: [3300:3300]
    volumes:
      - ./grafana.tempo.entrypoint.sh:/entrypoint:ro
      - ./grafana.tempo.config.yml:/config.yml:ro
    secrets:
      - minio.host
      - minio.port
      - minio.region
      - minio.tempo-bucket
      - minio.tempo-accesskey
      - minio.tempo-secretkey
    depends_on: { minio: { condition: service_healthy } }
  # --------------------------------------------------------------------------------------------------------------------
  pyroscope-all:
    extends: { service: _ }
    profiles: [simple, pyroscope]
    container_name: pyroscope-all
    image: grafana/pyroscope:1.10.0
    ports: [3400:3400]
    volumes:
      - ./grafana.pyroscope.config.yml:/config.yml:ro
      - ./.volume/data/grafana-pyroscope/var/lib/pyroscope/pyroscope-all:/var/lib/pyroscope
    depends_on: { minio: { condition: service_healthy } }
    entrypoint: [/usr/bin/pyroscope, -config.file=/config.yml]
  # --------------------------------------------------------------------------------------------------------------------
