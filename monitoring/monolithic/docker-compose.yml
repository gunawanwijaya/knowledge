services:
  _:
    profiles: [_]
    user: ${UID}:${GID}
    entrypoint: [/entrypoint]
    environment:
      TZ: Asia/Jakarta
      STDOUT: /dev/null
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_REGION: ${S3_REGION}
  grafana: # -----------------------------------------------------------------------------------------------------------
    extends: { service: _ }
    profiles: [monolithic, loki, mimir, pyroscope, tempo]
    image: grafana/grafana-enterprise:11.3.0
    ports: [3000:3000]
    volumes:
      - ./../../.volume/grafana-dashboard/var/lib:/var/lib/grafana
      - ./grafana.dashboard.entrypoint.sh:/entrypoint:ro
      - ./grafana.dashboard.config.ini:/etc/grafana/grafana.ini:ro
      - ./grafana.dashboard.provisioning.datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
  loki-all: # ----------------------------------------------------------------------------------------------------------
    extends: { service: _ }
    profiles: [monolithic, loki]
    ports: [3100:3100]
    environment:
      SERVICE: loki
      TARGET: all
      HTTP_LISTEN_PORT: 3100
      GRPC_LISTEN_PORT: 3101
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/loki:3.2.1 AS loki
        FROM busybox:latest
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=loki /usr/bin/loki .
        ENTRYPOINT [/entrypoint]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana.loki.entrypoint.sh:/entrypoint:ro
      - ./grafana.loki.config.yml:/etc/config/loki.yml:ro
      - ./otelcol-contrib.exec.sh:/otelcol-contrib.exec.sh:ro
      - ./otelcol-contrib.config.yml:/etc/config/otelcol-contrib.yml:ro
      - ./../../.volume/grafana-loki-all/var/lib:/var/lib/loki
      - ./../../.volume/grafana-loki-all/var/log:/var/log/loki
    secrets:
      - loki__bucket_blocks
      - loki__bucket_ruler
      - loki_access
      - loki_secret
  mimir-all: # ---------------------------------------------------------------------------------------------------------
    extends: { service: _ }
    profiles: [monolithic, mimir]
    ports: [3200:3200]
    environment:
      SERVICE: mimir
      TARGET: all
      HTTP_LISTEN_PORT: 3200
      GRPC_LISTEN_PORT: 3201
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/mimir:2.14.2 AS mimir
        FROM busybox:latest
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=mimir /bin/mimir .
        ENTRYPOINT [/entrypoint]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana.mimir.entrypoint.sh:/entrypoint:ro
      - ./grafana.mimir.config.yml:/etc/config/mimir.yml:ro
      - ./otelcol-contrib.exec.sh:/otelcol-contrib.exec.sh:ro
      - ./otelcol-contrib.config.yml:/etc/config/otelcol-contrib.yml:ro
      - ./../../.volume/grafana-mimir-all/var/lib:/var/lib/mimir
      - ./../../.volume/grafana-mimir-all/var/log:/var/log/mimir
    secrets:
      - mimir__bucket_alertmanager
      - mimir__bucket_blocks
      - mimir__bucket_ruler
      - mimir_access
      - mimir_secret
  pyroscope-all: # -----------------------------------------------------------------------------------------------------
    extends: { service: _ }
    profiles: [monolithic, pyroscope]
    ports: [3400:3400]
    environment:
      SERVICE: pyroscope
      TARGET: all
      HTTP_LISTEN_PORT: 3300
      GRPC_LISTEN_PORT: 3301
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/pyroscope:1.10.0 AS pyroscope
        FROM busybox:latest
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=pyroscope /usr/bin/pyroscope .
        ENTRYPOINT [/entrypoint]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana.pyroscope.entrypoint.sh:/entrypoint:ro
      - ./grafana.pyroscope.config.yml:/etc/config/pyroscope.yml:ro
      - ./otelcol-contrib.exec.sh:/otelcol-contrib.exec.sh:ro
      - ./otelcol-contrib.config.yml:/etc/config/otelcol-contrib.yml:ro
      - ./../../.volume/grafana-pyroscope-all/var/lib:/var/lib/pyroscope
      - ./../../.volume/grafana-pyroscope-all/var/log:/var/log/pyroscope
    secrets:
      - pyroscope__bucket_blocks
      - pyroscope_access
      - pyroscope_secret
  tempo-all: # ---------------------------------------------------------------------------------------------------------
    extends: { service: _ }
    profiles: [monolithic, tempo]
    ports: [3300:3300, "4317", "4318", "14317", "14318"]
    environment:
      SERVICE: tempo
      TARGET: all
      HTTP_LISTEN_PORT: 3300
      GRPC_LISTEN_PORT: 3301
    build:
      context: .
      dockerfile_inline: |
        FROM otel/opentelemetry-collector-contrib:0.113.0 AS otel
        FROM grafana/tempo:2.6.1 AS tempo
        FROM busybox:latest
        WORKDIR /bin
        COPY --from=otel /otelcol-contrib .
        COPY --from=tempo /tempo .
        ENTRYPOINT [/entrypoint]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana.tempo.entrypoint.sh:/entrypoint:ro
      - ./grafana.tempo.config.yml:/etc/config/tempo.yml:ro
      - ./otelcol-contrib.exec.sh:/otelcol-contrib.exec.sh:ro
      - ./otelcol-contrib.config.yml:/etc/config/otelcol-contrib.yml:ro
      - ./../../.volume/grafana-tempo-all/var/lib:/var/lib/tempo
      - ./../../.volume/grafana-tempo-all/var/log:/var/log/tempo
    secrets:
      - tempo__bucket_blocks
      - tempo_access
      - tempo_secret
secrets: # -------------------------------------------------------------------------------------------------------------
  loki__bucket_blocks: { file: ./../../.secret/loki__bucket_blocks }
  loki__bucket_ruler: { file: ./../../.secret/loki__bucket_ruler }
  loki_access: { file: ./../../.secret/loki_access }
  loki_secret: { file: ./../../.secret/loki_secret }
  
  mimir__bucket_alertmanager: { file: ./../../.secret/mimir__bucket_alertmanager }
  mimir__bucket_blocks: { file: ./../../.secret/mimir__bucket_blocks }
  mimir__bucket_ruler: { file: ./../../.secret/mimir__bucket_ruler }
  mimir_access: { file: ./../../.secret/mimir_access }
  mimir_secret: { file: ./../../.secret/mimir_secret }
  
  pyroscope__bucket_blocks: { file: ./../../.secret/pyroscope__bucket_blocks }
  pyroscope_access: { file: ./../../.secret/pyroscope_access }
  pyroscope_secret: { file: ./../../.secret/pyroscope_secret }
  
  tempo__bucket_blocks: { file: ./../../.secret/tempo__bucket_blocks }
  tempo_access: { file: ./../../.secret/tempo_access }
  tempo_secret: { file: ./../../.secret/tempo_secret }
